{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NewTaskInput = function NewTaskInput(_ref) {\n  var onAdd = _ref.onAdd;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var anim = useRef(new Animated.Value(0)).current;\n  var open = function open() {\n    Animated.spring(anim, {\n      toValue: 1,\n      useNativeDriver: false\n    }).start();\n    Keyboard.dismiss();\n  };\n  var submit = function submit() {\n    if (!value.trim()) return;\n    onAdd(value.trim());\n    setValue('');\n  };\n  var translateY = anim.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, -10]\n  });\n  return _jsx(Animated.View, {\n    style: [styles.container, {\n      transform: [{\n        translateY: translateY\n      }]\n    }],\n    children: _jsxs(View, {\n      style: styles.inputRow,\n      children: [_jsx(TextInput, {\n        placeholder: \"Add new task...\",\n        value: value,\n        onChangeText: setValue,\n        style: styles.input,\n        onSubmitEditing: submit\n      }), _jsx(TouchableOpacity, {\n        style: styles.addBtn,\n        onPress: submit,\n        activeOpacity: 0.8,\n        children: _jsx(Animated.Text, {\n          style: styles.addText,\n          children: \"+ New task\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    backgroundColor: 'transparent'\n  },\n  inputRow: {\n    backgroundColor: '#fff',\n    borderRadius: 999,\n    paddingVertical: 10,\n    paddingHorizontal: 14,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOpacity: 0.06,\n    shadowRadius: 10,\n    elevation: 6,\n    marginHorizontal: 20\n  },\n  input: {\n    flex: 1,\n    paddingHorizontal: 10,\n    fontSize: 16\n  },\n  addBtn: {\n    backgroundColor: '#9b7bff',\n    paddingVertical: 8,\n    paddingHorizontal: 14,\n    borderRadius: 28\n  },\n  addText: {\n    color: '#fff',\n    fontWeight: '700'\n  }\n});\nexport default NewTaskInput;","map":{"version":3,"names":["React","useState","useRef","View","TextInput","StyleSheet","TouchableOpacity","Animated","Keyboard","jsx","_jsx","jsxs","_jsxs","NewTaskInput","_ref","onAdd","_useState","_useState2","_slicedToArray","value","setValue","anim","Value","current","open","spring","toValue","useNativeDriver","start","dismiss","submit","trim","translateY","interpolate","inputRange","outputRange","style","styles","container","transform","children","inputRow","placeholder","onChangeText","input","onSubmitEditing","addBtn","onPress","activeOpacity","Text","addText","create","padding","backgroundColor","borderRadius","paddingVertical","paddingHorizontal","flexDirection","alignItems","shadowColor","shadowOpacity","shadowRadius","elevation","marginHorizontal","flex","fontSize","color","fontWeight"],"sources":["C:/Users/shaar/Documents/aryan/app_dev/todolist-rn/src/components/NewTaskInput.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { View, TextInput, StyleSheet, TouchableOpacity, Animated, Keyboard } from 'react-native';\r\n\r\nconst NewTaskInput = ({ onAdd }) => {\r\n  const [value, setValue] = useState('');\r\n  const anim = useRef(new Animated.Value(0)).current;\r\n\r\n  const open = () => {\r\n    Animated.spring(anim, { toValue: 1, useNativeDriver: false }).start();\r\n    Keyboard.dismiss();\r\n  };\r\n\r\n  const submit = () => {\r\n    if (!value.trim()) return;\r\n    onAdd(value.trim());\r\n    setValue('');\r\n  };\r\n\r\n  const translateY = anim.interpolate({ inputRange: [0, 1], outputRange: [0, -10] });\r\n\r\n  return (\r\n    <Animated.View style={[styles.container, { transform: [{ translateY }] }]}>\r\n      <View style={styles.inputRow}>\r\n        <TextInput\r\n          placeholder=\"Add new task...\"\r\n          value={value}\r\n          onChangeText={setValue}\r\n          style={styles.input}\r\n          onSubmitEditing={submit}\r\n        />\r\n\r\n        <TouchableOpacity style={styles.addBtn} onPress={submit} activeOpacity={0.8}>\r\n          <Animated.Text style={styles.addText}>+ New task</Animated.Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 16,\r\n    backgroundColor: 'transparent'\r\n  },\r\n  inputRow: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 999,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 14,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    shadowColor: '#000',\r\n    shadowOpacity: 0.06,\r\n    shadowRadius: 10,\r\n    elevation: 6,\r\n    marginHorizontal: 20\r\n  },\r\n  input: { flex: 1, paddingHorizontal: 10, fontSize: 16 },\r\n  addBtn: { backgroundColor: '#9b7bff', paddingVertical: 8, paddingHorizontal: 14, borderRadius: 28 },\r\n  addText: { color: '#fff', fontWeight: '700' }\r\n});\r\n\r\nexport default NewTaskInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}